/*!
 * weshare-language-ai.js | AI-powered language adaptation
 */
(function () {
  setTimeout(async () => {
    const browserLang = navigator.language || navigator.userLanguage;
    const lang = browserLang.split("-")[0];
    const defaultLang = "en";
    const apiEndpoint = "https://weshare-ai-language.vercel.app/api/translate";
    const supportedLangs = [
      "ja", "en", "it", "es", "el", "hi", "pl", "zh", "fr",
      "de", "ko", "pt", "ru", "ar", "nl", "vi", "et", "th", "cs", "da"
    ];

    const gaEventData = {
      langUsed: lang,
      ai_activated: true,
      event_category: "language_switch",
      event_label: lang
    };

    window._weshareLangMap = window._weshareLangMap || {};

    if (!supportedLangs.includes(lang)) {
      window._weshareLangMap = {};
      gtag("event", "weshare_language_switch", gaEventData);
      return;
    }

    try {
      const response = await fetch(apiEndpoint, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ lang })
      });

      if (!response.ok) throw new Error("Translation API error");

      const data = await response.json();
      const translations = data.translations || {};

      // Apply fallback and manual override
      const fallbackTexts = {
        share_button: "Share this page",
        share_menu: "Share to a social network",
        share_again: "Share again",
        copy: "Copy Link",
        email: "Share via Email",
        blog: "Post to your blog",
        follow: "Follow",
        search: "Search for social sharing networks",
        thanks: "Thanks for sharing!"
      };

      for (const key in fallbackTexts) {
        if (!translations[key]) {
          translations[key] = fallbackTexts[key];
        }
      }

      // Manual override for bad translations
      if (lang === "el" && translations["share"]) {
        translations["share"] = "Κοινοποίηση";
      }

      window._weshareLangMap = translations;
      window._weshareTranslationComplete = true;

      // Dispatch event to notify others
      const event = new CustomEvent("weshareTranslationsComplete", {
        detail: { translations }
      });
      window.dispatchEvent(event);

      gtag("event", "weshare_language_switch", gaEventData);
    } catch (error) {
      console.error("WeShare AI Language Error:", error);
      window._weshareLangMap = {};
      gtag("event", "weshare_language_switch", gaEventData);
    }
  }, 500);
})();
